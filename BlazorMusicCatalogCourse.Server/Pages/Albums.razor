@page "/albums"
@inject IAlbumService _albumService

@if (_albums is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container">
        <h1 class="text-center text-muted">Albums</h1>
        @for(int i = 0; i < _numberOfRows; i++)
        {
            <div class="row">
                @foreach (var album in _albums.Skip(i * 3).Take(3))
                {
                    <div class="col-xs-6 col-md-4">
                        <div>
                            <a href="/album/@album.Id">
                                <img src="data:image/png;base64,@(Convert.ToBase64String(album.CoverImage))" />
                            </a>
                            <div>
                                <h6><a href="/album/@album.Id">@album.Title - @album.Author</a></h6>
                            </div>
                            <div>
                                <a href="add-album/@album.Id">Edit</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
}

@code {

    private IEnumerable<Album> _albums;
    private int _numberOfRows = 10;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _albums = await _albumService.GetAlbums();
        }
        catch (Exception)
        {
            
        }
    }

}
